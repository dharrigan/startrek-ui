---

version: "3.8"
services:

  # When launching, give Traefik a few moments to detect all the services.
  reverse-proxy:
    image: traefik:v2.4
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.forwardedHeaders.insecure=true"
      - "--entrypoints.web.proxyProtocol.insecure=true"
    ports:
      - "9500:80" # the port on which the Star Trek UI will respond (it will be proxied through Traefik)
      - "9501:8080" # the port on which the UI for Traefik listens
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  startrek-ui:
    image: startrek-ui:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.startrek-ui.rule=Host(`localhost`)

  startrek-backend:
    image: startrek:latest
    environment:
      RUN_OPTS: "--config config/config-example.edn" # use the example configuration, as it's configured to assume defaults
    ports:
      - "9503:9503" # `api.cljs` in the startrek-ui project, connects to `http://localhost:9503/api/starships` for data.
    depends_on:
      - postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.startrek-api.rule=Host(`localhost`) && PathPrefix(`/api`)

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: startrek
      POSTGRES_USER: theborg
      POSTGRES_PASSWORD: resistanceisfutile
